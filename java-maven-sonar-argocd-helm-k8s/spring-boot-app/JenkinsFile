pipeline {
  agent {
    docker {
      image 'gayathrimurugaian/maven-docker-agent:v8'
      args '--user root -v /var/run/docker.sock:/var/run/docker.sock'
    }
  }

  environment {
    SONAR_URL = "http://15.157.69.245:9000"
    GIT_REPO_NAME = "cicd_argocd"
    GIT_USER_NAME = "mgayathri181"
    DOCKER_IMAGE = "gayathrimurugaian/my-springboot-app:${BUILD_NUMBER}"
  }

  stages {
    stage('Checkout') {
      steps {
        cleanWs()
        echo 'üîÑ Checkout started'
        checkout scm
        
        // Debug: print current directory and list contents after checkout
        sh 'pwd'
        sh 'ls -la'
      }
    }

    stage('Build & Test') {
      steps {
        // Adjust this directory path according to your repo root structure!
        dir('java-maven-sonar-argocd-helm-k8s/spring-boot-app') {
          echo 'üìÇ Contents of the build directory:'
          sh 'ls -la'
          sh 'mvn clean verify'
        }
      }
    }

    stage('SonarQube Analysis') {
      steps {
        echo 'üß™ Running SonarQube Analysis'
        withCredentials([string(credentialsId: 'sonarqube', variable: 'SONAR_AUTH_TOKEN')]) {
          dir('java-maven-sonar-argocd-helm-k8s/spring-boot-app') {
            sh """
              mvn sonar:sonar \
                -Dsonar.login=${SONAR_AUTH_TOKEN} \
                -Dsonar.host.url=${SONAR_URL}
            """
          }
        }
      }
    }

    stage('Build & Push Docker Image') {
      environment {
        REGISTRY_CREDENTIALS = credentials('docker-cred')
      }
      steps {
        echo 'üê≥ Building and pushing Docker image'
        dir('java-maven-sonar-argocd-helm-k8s/spring-boot-app') {
          sh "docker build -t ${DOCKER_IMAGE} ."
        }
        script {
          docker.withRegistry('https://index.docker.io/v1/', 'docker-cred') {
            docker.image("${DOCKER_IMAGE}").push()
          }
        }
      }
    }

    stage('Update Deployment Manifest & Push') {
      steps {
        echo 'üöÄ Updating deployment YAML for ArgoCD'
        withCredentials([string(credentialsId: 'github', variable: 'GITHUB_TOKEN')]) {
          sh """
            git config user.email "mgayathri181@gmail.com"
            git config user.name "${GIT_USER_NAME}"
            sed -i "s/replaceImageTag/${BUILD_NUMBER}/g" java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml
            git add java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml
            git commit -m "Update deployment image to version ${BUILD_NUMBER}" || echo "No changes to commit"
            git push https://${GITHUB_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME}.git HEAD:main
          """
        }
      }
    }
  }

  post {
    failure {
      echo "Build failed! Dumping workspace:"
      sh 'ls -R'
    }
  }
}
